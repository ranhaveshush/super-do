import java.security.MessageDigest

afterEvaluate {
    final relevantConfigurations = configurations.all.findAll {
        it.canBeResolved &&
                it.name.contains("Classpath") &&
                !it.name.contains("AndroidTest") &&
                !it.name.contains("UnitTest")
    }

    if (relevantConfigurations.size() <= 0) { return }

    println "\nChecking dependencies credibility:"

    relevantConfigurations.each { configuration ->
        configuration.resolvedConfiguration.firstLevelModuleDependencies.each { dependency ->
            if (dependency.moduleGroup != rootProject.name) {
                dependency.moduleArtifacts.each { artifact ->
                    def (checksum, algorithm) = checksums.findResult {
                        final parts = it.split(":")

                        assert parts.length == 5 : "Checksum declaration $it has invalid length"

                        if (dependency.moduleGroup == parts[0] &&
                            dependency.moduleName == parts[1] &&
                            dependency.moduleVersion == parts[2]) {
                            return [parts[3], parts[4]]
                        } else {
                            return null
                        }
                    } ?: [null, null]

                    assert checksum != null : "Missing checksum declaration for $dependency.name"
                    assert algorithm != null : "Missing algorithm declaration for $dependency.name"

                    MessageDigest md = MessageDigest.getInstance(algorithm)

                    artifact.file.eachByte 4096, { bytes, size ->
                        md.update(bytes, 0, size)
                    }
                    final calculatedChecksum = md.digest().collect { String.format "%02x", it }.join()

                    assert checksum == calculatedChecksum : "Checksum ($algorithm) does not match: $dependency.name"
                }
            }

            println "\u2705 $configuration: $dependency.name"
        }
    }

    println "Done successfully.\n"
}
